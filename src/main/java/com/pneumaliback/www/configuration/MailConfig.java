package com.pneumaliback.www.configuration;

import com.pneumaliback.www.service.mail.BrevoEmailSender;
import com.pneumaliback.www.service.mail.EmailSender;
import com.pneumaliback.www.service.mail.LogOnlyEmailSender;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * Configuration du service email avec Brevo
 * 
 * Deux impl√©mentations disponibles :
 * 1. Brevo API HTTP (production) - https://brevo.com
 * 2. LogOnly (d√©veloppement - log dans la console)
 * 
 * Configuration via propri√©t√©s :
 * - app.mail.provider=brevo ‚Üí Utilise Brevo (recommand√©)
 * - app.mail.provider=logonly ‚Üí Log uniquement (mode dev)
 */
@Configuration
@Slf4j
public class MailConfig {

    @Value("${app.mail.from:noreply@pneumali.ml}")
    private String fromAddress;

    /**
     * Bean EmailSender unique qui choisit automatiquement l'impl√©mentation
     * selon la configuration :
     * - Si app.mail.provider=brevo ‚Üí Utilise Brevo (si API key configur√©e)
     * - Sinon ‚Üí Utilise LogOnly (mode dev ou fallback)
     */
    @Bean
    public EmailSender emailSender(
            @Value("${app.mail.provider:logonly}") String provider,
            @Value("${app.mail.brevo.api-key:}") String apiKey) {

        // Mode Brevo activ√© et API key pr√©sente
        if ("brevo".equalsIgnoreCase(provider) && apiKey != null && !apiKey.trim().isEmpty()) {
            log.info("‚úÖ Configuration email : Brevo (API HTTP) - From: {}", fromAddress);
            log.info("üí° Brevo: 300 emails gratuits/jour");
            return new BrevoEmailSender(apiKey, fromAddress);
        }

        // Mode LogOnly (par d√©faut ou si Brevo non configur√©)
        log.warn("‚ö†Ô∏è  Configuration email : LogOnly (Mode D√©veloppement/Fallback)");
        log.warn("‚ö†Ô∏è  Les emails seront affich√©s dans les logs au lieu d'√™tre envoy√©s");
        if ("brevo".equalsIgnoreCase(provider)) {
            log.warn("‚ö†Ô∏è  Provider=brevo mais BREVO_API_KEY manquante, fallback vers LogOnly");
        }
        return new LogOnlyEmailSender();
    }
}
